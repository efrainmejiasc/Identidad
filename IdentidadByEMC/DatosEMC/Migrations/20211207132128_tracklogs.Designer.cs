// <auto-generated />
using System;
using DatosEMC.DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatosEMC.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20211207132128_tracklogs")]
    partial class tracklogs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatosEMC.DataModels.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INT");

                    b.Property<string>("NombreArchivo")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("RutaArchivo")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("TipoArchivo")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Archivo");
                });

            modelBuilder.Entity("DatosEMC.DataModels.AsistenciaMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("BIT");

                    b.Property<bool>("Asistencia")
                        .HasColumnType("BIT");

                    b.Property<string>("Dni")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("EmailSend")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Grado")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Grupo")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("IdCompany")
                        .HasColumnType("INT");

                    b.Property<int>("IdMod")
                        .HasColumnType("INT");

                    b.Property<string>("Materia")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Observacion")
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<int>("Turno")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("AsistenciaMeta");
                });

            modelBuilder.Entity("DatosEMC.DataModels.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("BIT");

                    b.Property<string>("Direccion")
                        .HasColumnType("VARCHAR(300)");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("Identificador")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Rfc")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Telefono")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("DatosEMC.DataModels.Materias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INT");

                    b.Property<string>("NombreMateria")
                        .HasColumnType("VARCHAR(80)");

                    b.HasKey("Id");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("DatosEMC.DataModels.Persona", b =>
                {
                    b.Property<string>("Dni")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("Activo")
                        .HasColumnType("BIT");

                    b.Property<string>("Apellido")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Empresa")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Foto")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Grado")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Grupo")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INT");

                    b.Property<int>("IdTurno")
                        .HasColumnType("INT");

                    b.Property<string>("Identificador")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Matricula")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("PathQr")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<string>("Qr")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<string>("Rh")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Turno")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Dni");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("DatosEMC.DataModels.Roles", b =>
                {
                    b.Property<string>("Rol")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DatosEMC.DataModels.TrackLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Mensaje")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Metodo")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TrackLog");
                });

            modelBuilder.Entity("DatosEMC.DataModels.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("Activo")
                        .HasColumnType("BIT");

                    b.Property<string>("Apellido")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Dni")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INT");

                    b.Property<int>("IdRol")
                        .HasColumnType("INT");

                    b.Property<string>("Nombre")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Password")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Password2")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Username")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Email");

                    b.ToTable("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
